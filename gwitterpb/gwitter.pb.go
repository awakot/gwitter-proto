// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gwitterpb/gwitter.proto

package gwitterpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Gweet struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Gweet) Reset()         { *m = Gweet{} }
func (m *Gweet) String() string { return proto.CompactTextString(m) }
func (*Gweet) ProtoMessage()    {}
func (*Gweet) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{0}
}

func (m *Gweet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gweet.Unmarshal(m, b)
}
func (m *Gweet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gweet.Marshal(b, m, deterministic)
}
func (m *Gweet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gweet.Merge(m, src)
}
func (m *Gweet) XXX_Size() int {
	return xxx_messageInfo_Gweet.Size(m)
}
func (m *Gweet) XXX_DiscardUnknown() {
	xxx_messageInfo_Gweet.DiscardUnknown(m)
}

var xxx_messageInfo_Gweet proto.InternalMessageInfo

func (m *Gweet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Gweet) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Gweet) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type PostGwitterRequest struct {
	Gweet                *Gweet   `protobuf:"bytes,1,opt,name=gweet,proto3" json:"gweet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostGwitterRequest) Reset()         { *m = PostGwitterRequest{} }
func (m *PostGwitterRequest) String() string { return proto.CompactTextString(m) }
func (*PostGwitterRequest) ProtoMessage()    {}
func (*PostGwitterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{1}
}

func (m *PostGwitterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostGwitterRequest.Unmarshal(m, b)
}
func (m *PostGwitterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostGwitterRequest.Marshal(b, m, deterministic)
}
func (m *PostGwitterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostGwitterRequest.Merge(m, src)
}
func (m *PostGwitterRequest) XXX_Size() int {
	return xxx_messageInfo_PostGwitterRequest.Size(m)
}
func (m *PostGwitterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostGwitterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostGwitterRequest proto.InternalMessageInfo

func (m *PostGwitterRequest) GetGweet() *Gweet {
	if m != nil {
		return m.Gweet
	}
	return nil
}

type PostGwitterResponse struct {
	Gweet                *Gweet   `protobuf:"bytes,1,opt,name=gweet,proto3" json:"gweet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostGwitterResponse) Reset()         { *m = PostGwitterResponse{} }
func (m *PostGwitterResponse) String() string { return proto.CompactTextString(m) }
func (*PostGwitterResponse) ProtoMessage()    {}
func (*PostGwitterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{2}
}

func (m *PostGwitterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostGwitterResponse.Unmarshal(m, b)
}
func (m *PostGwitterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostGwitterResponse.Marshal(b, m, deterministic)
}
func (m *PostGwitterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostGwitterResponse.Merge(m, src)
}
func (m *PostGwitterResponse) XXX_Size() int {
	return xxx_messageInfo_PostGwitterResponse.Size(m)
}
func (m *PostGwitterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostGwitterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostGwitterResponse proto.InternalMessageInfo

func (m *PostGwitterResponse) GetGweet() *Gweet {
	if m != nil {
		return m.Gweet
	}
	return nil
}

type ReadGwitterRequest struct {
	GweetId              string   `protobuf:"bytes,1,opt,name=gweet_id,json=gweetId,proto3" json:"gweet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadGwitterRequest) Reset()         { *m = ReadGwitterRequest{} }
func (m *ReadGwitterRequest) String() string { return proto.CompactTextString(m) }
func (*ReadGwitterRequest) ProtoMessage()    {}
func (*ReadGwitterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{3}
}

func (m *ReadGwitterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadGwitterRequest.Unmarshal(m, b)
}
func (m *ReadGwitterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadGwitterRequest.Marshal(b, m, deterministic)
}
func (m *ReadGwitterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadGwitterRequest.Merge(m, src)
}
func (m *ReadGwitterRequest) XXX_Size() int {
	return xxx_messageInfo_ReadGwitterRequest.Size(m)
}
func (m *ReadGwitterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadGwitterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadGwitterRequest proto.InternalMessageInfo

func (m *ReadGwitterRequest) GetGweetId() string {
	if m != nil {
		return m.GweetId
	}
	return ""
}

type ReadGwitterResponse struct {
	Gweet                *Gweet   `protobuf:"bytes,1,opt,name=gweet,proto3" json:"gweet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadGwitterResponse) Reset()         { *m = ReadGwitterResponse{} }
func (m *ReadGwitterResponse) String() string { return proto.CompactTextString(m) }
func (*ReadGwitterResponse) ProtoMessage()    {}
func (*ReadGwitterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{4}
}

func (m *ReadGwitterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadGwitterResponse.Unmarshal(m, b)
}
func (m *ReadGwitterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadGwitterResponse.Marshal(b, m, deterministic)
}
func (m *ReadGwitterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadGwitterResponse.Merge(m, src)
}
func (m *ReadGwitterResponse) XXX_Size() int {
	return xxx_messageInfo_ReadGwitterResponse.Size(m)
}
func (m *ReadGwitterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadGwitterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadGwitterResponse proto.InternalMessageInfo

func (m *ReadGwitterResponse) GetGweet() *Gweet {
	if m != nil {
		return m.Gweet
	}
	return nil
}

type UpdateGwitterRequest struct {
	Gweet                *Gweet   `protobuf:"bytes,1,opt,name=gweet,proto3" json:"gweet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateGwitterRequest) Reset()         { *m = UpdateGwitterRequest{} }
func (m *UpdateGwitterRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGwitterRequest) ProtoMessage()    {}
func (*UpdateGwitterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{5}
}

func (m *UpdateGwitterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGwitterRequest.Unmarshal(m, b)
}
func (m *UpdateGwitterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGwitterRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGwitterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGwitterRequest.Merge(m, src)
}
func (m *UpdateGwitterRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGwitterRequest.Size(m)
}
func (m *UpdateGwitterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGwitterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGwitterRequest proto.InternalMessageInfo

func (m *UpdateGwitterRequest) GetGweet() *Gweet {
	if m != nil {
		return m.Gweet
	}
	return nil
}

type UpdateGwitterResponse struct {
	Gweet                *Gweet   `protobuf:"bytes,1,opt,name=gweet,proto3" json:"gweet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateGwitterResponse) Reset()         { *m = UpdateGwitterResponse{} }
func (m *UpdateGwitterResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateGwitterResponse) ProtoMessage()    {}
func (*UpdateGwitterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{6}
}

func (m *UpdateGwitterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGwitterResponse.Unmarshal(m, b)
}
func (m *UpdateGwitterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGwitterResponse.Marshal(b, m, deterministic)
}
func (m *UpdateGwitterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGwitterResponse.Merge(m, src)
}
func (m *UpdateGwitterResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateGwitterResponse.Size(m)
}
func (m *UpdateGwitterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGwitterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGwitterResponse proto.InternalMessageInfo

func (m *UpdateGwitterResponse) GetGweet() *Gweet {
	if m != nil {
		return m.Gweet
	}
	return nil
}

type DeleteGwitterRequest struct {
	GweetId              string   `protobuf:"bytes,1,opt,name=gweet_id,json=gweetId,proto3" json:"gweet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGwitterRequest) Reset()         { *m = DeleteGwitterRequest{} }
func (m *DeleteGwitterRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGwitterRequest) ProtoMessage()    {}
func (*DeleteGwitterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{7}
}

func (m *DeleteGwitterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGwitterRequest.Unmarshal(m, b)
}
func (m *DeleteGwitterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGwitterRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGwitterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGwitterRequest.Merge(m, src)
}
func (m *DeleteGwitterRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGwitterRequest.Size(m)
}
func (m *DeleteGwitterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGwitterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGwitterRequest proto.InternalMessageInfo

func (m *DeleteGwitterRequest) GetGweetId() string {
	if m != nil {
		return m.GweetId
	}
	return ""
}

type DeleteGwitterResponse struct {
	GweetId              string   `protobuf:"bytes,1,opt,name=gweet_id,json=gweetId,proto3" json:"gweet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGwitterResponse) Reset()         { *m = DeleteGwitterResponse{} }
func (m *DeleteGwitterResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteGwitterResponse) ProtoMessage()    {}
func (*DeleteGwitterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{8}
}

func (m *DeleteGwitterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGwitterResponse.Unmarshal(m, b)
}
func (m *DeleteGwitterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGwitterResponse.Marshal(b, m, deterministic)
}
func (m *DeleteGwitterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGwitterResponse.Merge(m, src)
}
func (m *DeleteGwitterResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteGwitterResponse.Size(m)
}
func (m *DeleteGwitterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGwitterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGwitterResponse proto.InternalMessageInfo

func (m *DeleteGwitterResponse) GetGweetId() string {
	if m != nil {
		return m.GweetId
	}
	return ""
}

type ListGwitterRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGwitterRequest) Reset()         { *m = ListGwitterRequest{} }
func (m *ListGwitterRequest) String() string { return proto.CompactTextString(m) }
func (*ListGwitterRequest) ProtoMessage()    {}
func (*ListGwitterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{9}
}

func (m *ListGwitterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGwitterRequest.Unmarshal(m, b)
}
func (m *ListGwitterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGwitterRequest.Marshal(b, m, deterministic)
}
func (m *ListGwitterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGwitterRequest.Merge(m, src)
}
func (m *ListGwitterRequest) XXX_Size() int {
	return xxx_messageInfo_ListGwitterRequest.Size(m)
}
func (m *ListGwitterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGwitterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListGwitterRequest proto.InternalMessageInfo

type ListGwitterResponse struct {
	Gweet                *Gweet   `protobuf:"bytes,1,opt,name=gweet,proto3" json:"gweet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGwitterResponse) Reset()         { *m = ListGwitterResponse{} }
func (m *ListGwitterResponse) String() string { return proto.CompactTextString(m) }
func (*ListGwitterResponse) ProtoMessage()    {}
func (*ListGwitterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13001c6fa483e8fa, []int{10}
}

func (m *ListGwitterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGwitterResponse.Unmarshal(m, b)
}
func (m *ListGwitterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGwitterResponse.Marshal(b, m, deterministic)
}
func (m *ListGwitterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGwitterResponse.Merge(m, src)
}
func (m *ListGwitterResponse) XXX_Size() int {
	return xxx_messageInfo_ListGwitterResponse.Size(m)
}
func (m *ListGwitterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGwitterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGwitterResponse proto.InternalMessageInfo

func (m *ListGwitterResponse) GetGweet() *Gweet {
	if m != nil {
		return m.Gweet
	}
	return nil
}

func init() {
	proto.RegisterType((*Gweet)(nil), "gwitter.Gweet")
	proto.RegisterType((*PostGwitterRequest)(nil), "gwitter.PostGwitterRequest")
	proto.RegisterType((*PostGwitterResponse)(nil), "gwitter.PostGwitterResponse")
	proto.RegisterType((*ReadGwitterRequest)(nil), "gwitter.ReadGwitterRequest")
	proto.RegisterType((*ReadGwitterResponse)(nil), "gwitter.ReadGwitterResponse")
	proto.RegisterType((*UpdateGwitterRequest)(nil), "gwitter.UpdateGwitterRequest")
	proto.RegisterType((*UpdateGwitterResponse)(nil), "gwitter.UpdateGwitterResponse")
	proto.RegisterType((*DeleteGwitterRequest)(nil), "gwitter.DeleteGwitterRequest")
	proto.RegisterType((*DeleteGwitterResponse)(nil), "gwitter.DeleteGwitterResponse")
	proto.RegisterType((*ListGwitterRequest)(nil), "gwitter.ListGwitterRequest")
	proto.RegisterType((*ListGwitterResponse)(nil), "gwitter.ListGwitterResponse")
}

func init() { proto.RegisterFile("gwitterpb/gwitter.proto", fileDescriptor_13001c6fa483e8fa) }

var fileDescriptor_13001c6fa483e8fa = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x4f, 0x83, 0x40,
	0x10, 0x0d, 0x34, 0x2d, 0x76, 0xd0, 0x1e, 0x56, 0x9a, 0x62, 0xfd, 0x88, 0x21, 0x1e, 0x3c, 0xb5,
	0x8a, 0x37, 0x3f, 0x2e, 0xc6, 0xa4, 0x1f, 0x31, 0xc6, 0x60, 0xbc, 0x78, 0x69, 0xda, 0xee, 0xa4,
	0xd9, 0xc4, 0x00, 0xc2, 0xd6, 0xfe, 0x0b, 0x7f, 0xb3, 0x61, 0x4b, 0x71, 0x81, 0xb5, 0x11, 0x6f,
	0xcc, 0x0e, 0xef, 0xbd, 0x79, 0xfb, 0x26, 0x0b, 0x9d, 0xc5, 0x8a, 0x71, 0x8e, 0x51, 0x38, 0xeb,
	0xa7, 0x5f, 0xbd, 0x30, 0x0a, 0x78, 0x40, 0x8c, 0xb4, 0x74, 0xc6, 0x50, 0x1f, 0xac, 0x10, 0x39,
	0x69, 0x81, 0xce, 0xa8, 0xad, 0x9d, 0x6a, 0xe7, 0x4d, 0x4f, 0x67, 0x94, 0x74, 0xc0, 0x58, 0xc6,
	0x18, 0x4d, 0x18, 0xb5, 0x75, 0x71, 0xd8, 0x48, 0xca, 0x11, 0x25, 0x36, 0x18, 0xf3, 0xc0, 0xe7,
	0xe8, 0x73, 0xbb, 0x26, 0x1a, 0x9b, 0xd2, 0xb9, 0x06, 0xf2, 0x1c, 0xc4, 0x7c, 0xb0, 0xa6, 0xf6,
	0xf0, 0x63, 0x89, 0x31, 0x27, 0x67, 0x50, 0x5f, 0x24, 0x0a, 0x82, 0xdb, 0x74, 0x5b, 0xbd, 0xcd,
	0x24, 0x42, 0xd7, 0x5b, 0x37, 0x9d, 0x1b, 0xd8, 0xcf, 0x61, 0xe3, 0x30, 0xf0, 0x63, 0xfc, 0x23,
	0xb8, 0x0f, 0xc4, 0xc3, 0x29, 0x2d, 0x08, 0x1f, 0xc0, 0x8e, 0x68, 0x4f, 0x32, 0x5f, 0x86, 0xa8,
	0x47, 0x34, 0x51, 0xcb, 0x01, 0x2a, 0xa9, 0xdd, 0x82, 0xf5, 0x1a, 0xd2, 0x29, 0xc7, 0x7f, 0x19,
	0xbd, 0x83, 0x76, 0x01, 0x5d, 0x49, 0xfc, 0x12, 0xac, 0x07, 0x7c, 0xc7, 0x92, 0xf8, 0x16, 0xb3,
	0x2e, 0xb4, 0x0b, 0x90, 0x54, 0x71, 0x0b, 0xc6, 0x02, 0xf2, 0xc8, 0x8a, 0x51, 0x26, 0xd7, 0x96,
	0x3b, 0xad, 0x32, 0xb9, 0xfb, 0x55, 0x83, 0x5d, 0x71, 0xf0, 0x82, 0xd1, 0x27, 0x9b, 0x23, 0x19,
	0x82, 0x29, 0x45, 0x4e, 0x0e, 0x33, 0x58, 0x79, 0x89, 0xba, 0x47, 0xea, 0x66, 0x3a, 0xc0, 0x10,
	0x4c, 0x29, 0x4e, 0x89, 0xa9, 0xbc, 0x15, 0x12, 0x93, 0x6a, 0x03, 0x9e, 0x60, 0x2f, 0x97, 0x0e,
	0x39, 0xce, 0x7e, 0x57, 0x65, 0xde, 0x3d, 0xf9, 0xad, 0xfd, 0xc3, 0x97, 0xbb, 0x7b, 0x89, 0x4f,
	0x15, 0xa3, 0xc4, 0xa7, 0x8e, 0x6c, 0x0c, 0xa6, 0x94, 0x80, 0xe4, 0xb4, 0x9c, 0x96, 0xe4, 0x54,
	0x11, 0xda, 0x85, 0x76, 0x6f, 0xbe, 0x35, 0xb3, 0xe7, 0x61, 0xd6, 0x10, 0xef, 0xc2, 0xd5, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x36, 0xa2, 0xcf, 0x85, 0x32, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GweetServiceClient is the client API for GweetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GweetServiceClient interface {
	PostGwitter(ctx context.Context, in *PostGwitterRequest, opts ...grpc.CallOption) (*PostGwitterResponse, error)
	ReadGwitter(ctx context.Context, in *ReadGwitterRequest, opts ...grpc.CallOption) (*ReadGwitterResponse, error)
	UpdateGwitter(ctx context.Context, in *UpdateGwitterRequest, opts ...grpc.CallOption) (*UpdateGwitterResponse, error)
	DeleteGwitter(ctx context.Context, in *DeleteGwitterRequest, opts ...grpc.CallOption) (*DeleteGwitterResponse, error)
	ListGwitter(ctx context.Context, in *ListGwitterRequest, opts ...grpc.CallOption) (GweetService_ListGwitterClient, error)
}

type gweetServiceClient struct {
	cc *grpc.ClientConn
}

func NewGweetServiceClient(cc *grpc.ClientConn) GweetServiceClient {
	return &gweetServiceClient{cc}
}

func (c *gweetServiceClient) PostGwitter(ctx context.Context, in *PostGwitterRequest, opts ...grpc.CallOption) (*PostGwitterResponse, error) {
	out := new(PostGwitterResponse)
	err := c.cc.Invoke(ctx, "/gwitter.GweetService/PostGwitter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gweetServiceClient) ReadGwitter(ctx context.Context, in *ReadGwitterRequest, opts ...grpc.CallOption) (*ReadGwitterResponse, error) {
	out := new(ReadGwitterResponse)
	err := c.cc.Invoke(ctx, "/gwitter.GweetService/ReadGwitter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gweetServiceClient) UpdateGwitter(ctx context.Context, in *UpdateGwitterRequest, opts ...grpc.CallOption) (*UpdateGwitterResponse, error) {
	out := new(UpdateGwitterResponse)
	err := c.cc.Invoke(ctx, "/gwitter.GweetService/UpdateGwitter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gweetServiceClient) DeleteGwitter(ctx context.Context, in *DeleteGwitterRequest, opts ...grpc.CallOption) (*DeleteGwitterResponse, error) {
	out := new(DeleteGwitterResponse)
	err := c.cc.Invoke(ctx, "/gwitter.GweetService/DeleteGwitter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gweetServiceClient) ListGwitter(ctx context.Context, in *ListGwitterRequest, opts ...grpc.CallOption) (GweetService_ListGwitterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GweetService_serviceDesc.Streams[0], "/gwitter.GweetService/ListGwitter", opts...)
	if err != nil {
		return nil, err
	}
	x := &gweetServiceListGwitterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GweetService_ListGwitterClient interface {
	Recv() (*ListGwitterResponse, error)
	grpc.ClientStream
}

type gweetServiceListGwitterClient struct {
	grpc.ClientStream
}

func (x *gweetServiceListGwitterClient) Recv() (*ListGwitterResponse, error) {
	m := new(ListGwitterResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GweetServiceServer is the server API for GweetService service.
type GweetServiceServer interface {
	PostGwitter(context.Context, *PostGwitterRequest) (*PostGwitterResponse, error)
	ReadGwitter(context.Context, *ReadGwitterRequest) (*ReadGwitterResponse, error)
	UpdateGwitter(context.Context, *UpdateGwitterRequest) (*UpdateGwitterResponse, error)
	DeleteGwitter(context.Context, *DeleteGwitterRequest) (*DeleteGwitterResponse, error)
	ListGwitter(*ListGwitterRequest, GweetService_ListGwitterServer) error
}

// UnimplementedGweetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGweetServiceServer struct {
}

func (*UnimplementedGweetServiceServer) PostGwitter(ctx context.Context, req *PostGwitterRequest) (*PostGwitterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostGwitter not implemented")
}
func (*UnimplementedGweetServiceServer) ReadGwitter(ctx context.Context, req *ReadGwitterRequest) (*ReadGwitterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadGwitter not implemented")
}
func (*UnimplementedGweetServiceServer) UpdateGwitter(ctx context.Context, req *UpdateGwitterRequest) (*UpdateGwitterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGwitter not implemented")
}
func (*UnimplementedGweetServiceServer) DeleteGwitter(ctx context.Context, req *DeleteGwitterRequest) (*DeleteGwitterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGwitter not implemented")
}
func (*UnimplementedGweetServiceServer) ListGwitter(req *ListGwitterRequest, srv GweetService_ListGwitterServer) error {
	return status.Errorf(codes.Unimplemented, "method ListGwitter not implemented")
}

func RegisterGweetServiceServer(s *grpc.Server, srv GweetServiceServer) {
	s.RegisterService(&_GweetService_serviceDesc, srv)
}

func _GweetService_PostGwitter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostGwitterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GweetServiceServer).PostGwitter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gwitter.GweetService/PostGwitter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GweetServiceServer).PostGwitter(ctx, req.(*PostGwitterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GweetService_ReadGwitter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadGwitterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GweetServiceServer).ReadGwitter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gwitter.GweetService/ReadGwitter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GweetServiceServer).ReadGwitter(ctx, req.(*ReadGwitterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GweetService_UpdateGwitter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGwitterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GweetServiceServer).UpdateGwitter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gwitter.GweetService/UpdateGwitter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GweetServiceServer).UpdateGwitter(ctx, req.(*UpdateGwitterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GweetService_DeleteGwitter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGwitterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GweetServiceServer).DeleteGwitter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gwitter.GweetService/DeleteGwitter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GweetServiceServer).DeleteGwitter(ctx, req.(*DeleteGwitterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GweetService_ListGwitter_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListGwitterRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GweetServiceServer).ListGwitter(m, &gweetServiceListGwitterServer{stream})
}

type GweetService_ListGwitterServer interface {
	Send(*ListGwitterResponse) error
	grpc.ServerStream
}

type gweetServiceListGwitterServer struct {
	grpc.ServerStream
}

func (x *gweetServiceListGwitterServer) Send(m *ListGwitterResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _GweetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gwitter.GweetService",
	HandlerType: (*GweetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostGwitter",
			Handler:    _GweetService_PostGwitter_Handler,
		},
		{
			MethodName: "ReadGwitter",
			Handler:    _GweetService_ReadGwitter_Handler,
		},
		{
			MethodName: "UpdateGwitter",
			Handler:    _GweetService_UpdateGwitter_Handler,
		},
		{
			MethodName: "DeleteGwitter",
			Handler:    _GweetService_DeleteGwitter_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListGwitter",
			Handler:       _GweetService_ListGwitter_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gwitterpb/gwitter.proto",
}
